---
title: Error budget burn-rate rules
weight: 11
---

# Error budget burn-rate rules

##Burn-Rate Windows

The monitoring-as-code framework uses a standard set of burn-rate windows for its alerts:

|Severity|Long window|Short window|Factor|
|--------|-----------|------------|------|
|1|1 hour|5 minutes|14.4|
|2|6 hours|30 minutes|6|
|4|3 days|6 hours|1|

The purpose of having a short window and a long window is to check that the error budget is being consumed recently (short window) and continuously (long window).

The factor is the proportion of error budget consumed over a 30 day rolling period. For example, if your SLI had an evaluation window of 5 minutes then there would be 8640 total evaluation windows in the 30 days. If you had an SLO target of 90% then you would have a 10% error budget, which equates to 864 bad windows allowed without breaching the SLO. If you consumed all 864 windows of your error budget over the 30 day period, you would have a factor of 1. If you consumed double your error budget, 1728 windows, you would have a factor of 2. If you consumed half your error budget, 432 windows, you would have a factor of 0.5.

Each burn-rate window has a factor that must be exceeded by the burn-rate of both the short and long windows in order for an alert to be fired.

##Burn-Rate Rules

The following calculation is used when determining the burn-rate over a long or short window:
(1 - number of good evaluation windows / total number of evaluation windows) / error budget as a decimal = burn-rate

For example, if you had an evaluation window of 5 minutes (12 total windows in an hour) and an SLO target of 90% (10% error budget), if there were 3 bad evaluation windows over the 1 hour burn-rate window, the calculation would be:

(1 - 9 / 12) / 0.1 = 2.5

This would not trigger the severity 1 alert because the burn-rate of the 1 hour burn-rate window is not greater than the factor of 14.4.
