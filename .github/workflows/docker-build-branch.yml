name: 'Docker Build Branch'

on:
  pull_request:
    types: [ labeled, opened, reopened, synchronize ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    name: 'Branch Publish'
    permissions:
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'smoketest') == true
    steps:
      #Checks-out our repository under $GITHUB_WORKSPACE, so our workflow can access it.
      - name: Checkout
        uses: actions/checkout@v2

        #Logs into Github registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.event.pull_request.head.sha }}

      - name: Build container
        uses: docker/build-push-action@v3
        with:
          context: ./monitoring-as-code
          file: ./monitoring-as-code/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PACKAGE_TOKEN=${{secrets.GITHUB_TOKEN}}
            MAC_VERSION='#${{ github.event.number }}'

      - name: Run Snyk to check Docker image for vulnerabilities
        id: snyk
        continue-on-error: true
        uses: snyk/actions/docker@0.3.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ steps.meta.outputs.tags }}
          args: |
            --file=Dockerfile
            --severity-threshold=medium
            --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

      - name: Check on failures
        if: steps.snyk.outcome != 'success'
        run: exit 1

      - name: Push image to GitHub Container Registry
        run: docker push ${{ steps.meta.outputs.tags }}