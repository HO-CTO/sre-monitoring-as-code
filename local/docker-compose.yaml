version: '3'

volumes:
    prometheus1_data: {}
    prometheus2_data: {}
    grafana_data: {}
    minio_data: {}

services:
    prometheus-1:
        image: prom/prometheus:v2.21.0
        volumes:
            - ./prometheus/:/etc/prometheus/
            - prometheus1_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus1.yaml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.max-block-duration=30m'
            - '--storage.tsdb.min-block-duration=30m'
            - '--web.enable-lifecycle'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
            - '--log.level=debug'
        ports:
            - 9081:9090
        links:
            - alertmanager:alertmanager
        restart: on-failure:5

    prometheus-2:
        image: prom/prometheus:v2.21.0
        volumes:
            - ./prometheus/:/etc/prometheus/
            - prometheus2_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus2.yaml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.max-block-duration=5m'
            - '--storage.tsdb.min-block-duration=5m'
            - '--web.enable-lifecycle'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
        ports:
            - 9082:9090
        links:
            - alertmanager:alertmanager
        restart: on-failure:5
#        extra_hosts:
#            - 'host.docker.internal:host-gateway'

    thanos-sidecar-1:
        image: quay.io/thanos/thanos:v0.23.0
        volumes:
            - ./thanos/:/etc/thanos/
            - prometheus1_data:/prometheus
        command:
            - 'sidecar'
            - '--tsdb.path=/prometheus'
            - '--prometheus.url=http://prometheus-1:9090'
            - '--grpc-address=0.0.0.0:10091'
            - '--http-address=0.0.0.0:10902'
            - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
        depends_on:
            - prometheus-1
            - minio
        restart: on-failure:5

    thanos-sidecar-2:
        image: quay.io/thanos/thanos:v0.23.0
        volumes:
            - ./thanos/:/etc/thanos/
            - prometheus2_data:/prometheus
        command:
            - 'sidecar'
            - '--tsdb.path=/prometheus'
            - '--prometheus.url=http://prometheus-2:9090'
            - '--grpc-address=0.0.0.0:10091'
            - '--http-address=0.0.0.0:10902'
            - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
        depends_on:
            - prometheus-2
            - minio
        restart: on-failure:5

    thanos-querier:
        image: quay.io/thanos/thanos:v0.23.0
        command:
            - 'query'
            - '--grpc-address=0.0.0.0:10091'
            - '--http-address=0.0.0.0:10902'
            - '--query.replica-label=replica'
            - '--store=thanos-sidecar-1:10091'
            - '--store=thanos-sidecar-2:10091'
            - '--store=thanos-store-gateway:10091'
        ports:
            - 10902:10902
        depends_on:
            - thanos-sidecar-1
            - thanos-sidecar-2

    thanos-store-gateway:
        image: quay.io/thanos/thanos:v0.23.0
        volumes:
            - ./thanos/:/etc/thanos/
        command:
            - 'store'
            - '--grpc-address=0.0.0.0:10091'
            - '--http-address=0.0.0.0:10902'
            - '--data-dir=/tmp/thanos/store'
            - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
        depends_on:
            - minio
        restart: on-failure:5 

    thanos-compactor:
        image: quay.io/thanos/thanos:v0.23.0
        volumes:
            - ./thanos/:/etc/thanos/
        command:
            - 'compact'
            - '--log.level=debug'
            - '--data-dir=/data'
            - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
            - '--wait'
            - '--http-address=0.0.0.0:10902'
        depends_on:
            - minio
        restart: on-failure:5 

    thanos-ruler:
        image: quay.io/thanos/thanos:v0.23.0
        volumes:
            - ./thanos/:/etc/thanos/
        command:
            - 'rule'
            - '--grpc-address=0.0.0.0:10091'
            - '--http-address=0.0.0.0:10902'
            - '--log.level=debug'
            - '--data-dir=/data'
            - '--eval-interval=15s'
            - '--rule-file=/etc/thanos/*.rules.yaml'
            - '--alertmanagers.url=http://alertmanager:9093'
            - '--query=thanos-querier:10902'
            - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
            - "--label=ruler_cluster=\"vegas\""
            - "--label=ruler_replica=\"r1\""
        ports:
            - 10903:10902
        depends_on:
            - minio
            - thanos-querier
        restart: on-failure:5 

    thanos-bucket-web:
        image: quay.io/thanos/thanos:v0.23.0
        volumes:
            - ./thanos/:/etc/thanos/
        command:
            - 'tools'
            - 'bucket'
            - 'web'
            - '--http-address=0.0.0.0:10902'
            - '--log.level=debug'
            - '--objstore.config-file=/etc/thanos/bucket_config.yaml'
            - '--refresh=5m'
            - '--timeout=2m'
            - '--label=replica'
        ports:
            - 10904:10902
        depends_on:
            - minio
        restart: on-failure:5 

    minio:
        image: minio/minio:RELEASE.2022-01-28T02-28-16Z
        volumes:
            - minio_data:/data
        entrypoint: sh
        command: -c 'mkdir -p /data/monitoring-bucket && minio server /data'
        environment:
            - MINIO_ACCESS_KEY=l2accesskey
            - MINIO_SECRET_KEY=l2secretkey
            - MINIO_PROMETHEUS_AUTH_TYPE=public
        ports:
            - 9001:9000
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            interval: 3s
            timeout: 2s
            retries: 30

    alertmanager:
        image: prom/alertmanager:v0.22.0
        ports:
            - 9093:9093
        volumes:
            - ./alertmanager/config:/config
        entrypoint: /config/start.sh
        env_file:
            - global.env
        restart: on-failure:5 

    grafana:
        image: grafana/grafana:8.1.7
        user: "104"
        depends_on:
            - prometheus-1
            - prometheus-2
        ports:
            - 3000:3000
        volumes:
            - grafana_data:/var/lib/grafana
            - ./grafana/provisioning/:/etc/grafana/provisioning/
        env_file:
            - grafana/grafana.env
        restart: on-failure:5

    yace:
        image: ghcr.io/nerdswords/yet-another-cloudwatch-exporter:v0.34.0-alpha
        profiles: ["monitoring-fullstack"]
        user: root
        volumes:
            - ./yace/config:/config
            - $HOME/.aws/credentials:/exporter/.aws/credentials
        entrypoint: /config/start.sh
        ports:
            - 5000:5000
        environment:
            - AWS_PROFILE
            - AWS_SHARED_CREDENTIALS_FILE=/exporter/.aws/credentials
            - AWS_ENDPOINT_URL=http://host.docker.internal:4566
        env_file:
            - global.env
        restart: on-failure:5

#    cloudwatch-exporter:
#        image: prom/cloudwatch-exporter:v0.14.3
#        volumes:
#            - ./cloudwatch-exporter/config.yml:/config/config.yml
#            - $HOME/.aws/credentials:/root/.aws/credentials
#        command:
#            - '/config/config.yml'
#        ports:
#            - 9106:9106
#        restart: on-failure:5