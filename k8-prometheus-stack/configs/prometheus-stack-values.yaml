---
# rules /etc/prometheus/rules/prometheus-prometheus-stack-sre-prometheus-rulefiles-0/*.yaml
nameOverride: "sre"

defaultRules:
  create: false

### Grafana  
grafana:
  securityContext:
    runAsUser: 0
    runAsGroup: 0
    fsGroup: 0
  rbac:
    extraRoleRules:
      # Allow k8s-sidecar image to read ConfigMap objects in same namespace
      - apiGroups: [""]
        resources: ["configmaps"]
        verbs: ["get", "watch", "list"]
# Setup dashboards
  dashboardProviders:
    dashboardproviders.yaml:
     apiVersion: 1
     providers:
      - name: 'app1'
        orgId: 1
        folder: 'app1'
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10 
        allowUiUpdates: true
        editable: true
        options:
          path: /var/lib/grafana/dashboards/app1
          foldersFromFilesStructure: true
          datasource: Prometheus
  additionalDataSources:
    - name: prometheus
      type: prometheus
      access: proxy
      orgId: 1
#      url: http://thanos-querier:10902
      url: http://prometheus-stack-sre-prometheus.monitoring:9090/
      password:
      user:
      database:
      basicAuth: false
      basicAuthUser:
      basicAuthPassword:
      withCredentials:
#      isDefault: true
      isDefault: false
      jsonData:
        graphiteVersion: "1.1"
        tlsAuth: false
        tlsAuthWithCACert: false
      secureJsonData:
        tlsCACert: "..."
        tlsClientCert: "..."
        tlsClientKey: "..."
      version: 1
      editable: true  
    - name: cloudwatch
      jsonData:
        authType: credentials
        defaultRegion: eu-west-1
      type: cloudwatch
  adminPassword: admin   
  extraVolumeMounts:
    - name: aws-credentials
      mountPath: /usr/share/grafana/.aws/
      readOnly: true
    - name: additional-dashboards
      mountPath: /var/lib/grafana/dashboards/app1
      readOnly: true
#      hostPath: /Users/georgeowusu/Documents/GIT/docker-desktop/grafana/provisioning/dashboards/monitoring
#      hostPath: /Users/georgeowusu/Documents/GIT/docker-desktop/grafana/provisioning/dashboards/
      hostPath: /Users/georgeowusu/Documents/GIT/sre-monitoring-as-code/local/grafana/provisioning/dashboards
    # - name: additional-datasources
    #   mountPath: /var/lib/grafana/datasources
    #   readOnly: true
    #   hostPath: /Users/georgeowusu/Documents/GIT/sre-monitoring-as-code/local/grafana/provisioning/datasources
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - grafana.home.local
    pathType: ImplementationSpecific
  serviceMonitor:
    selfMonitor: false

### AlertManager
alertmanager:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - alertmanager.home.local
    pathType: ImplementationSpecific
  alertmanagerSpec:
    retention: 12h
  serviceMonitor:
    selfMonitor: false

### Prometheus
prometheus:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - prometheus.home.local
    pathType: ImplementationSpecific
  prometheusSpec:
    retention: 12h
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
  serviceMonitor:
    selfMonitor: false



### Prometheus Node Exporter
prometheus-node-exporter:
  hostRootFsMount: false

### Prometheus Operator
prometheusOperator:
  serviceMonitor:
    selfMonitor: false

### Disabled service monitors
kubeProxy:
  enabled: false

kubeApiServer:
  enabled: false
  
coreDns:
  enabled: false

kubeEtcd:
  enabled: false

kubeScheduler:
  enabled: false

kubeControllerManager:
  enabled: false

kubeDns:
  enabled: false
